{"pages":[],"posts":[{"title":"Docker Swarm","text":"Docker SwarmSwarm是啥？根据官网上的说明，Swarm是当前Docker版本一种原生的管理Docker引擎集群的模式。使用Docker CLI可以在swarm中部署应用、管理Swarm的行为。 Swarm概念的出现是为了”Scale your app”。 Docker Swarm 主要包含两方面内容：一个企业级的Docker安全集群，一个微服务应用编排引擎。 Swarm环境部署swarm是由一个或者多个Docker节点组成，这些节点需要通过可靠的网络相连。这就要求节点要安装Docker,第二要网络相通，以便swarm集群内通信。 节点(Node)类型 工作节点(WORKER):接收来自管理节点的任务并执行。 管理节点(MANAGER):负责集群控制面(Control Plane)。 环境准备 准备6个节点(物理服务器、虚拟机、树莓派、云实例)，包含3个管理节点和3个工作节点。 部署步骤 初始化 –&gt; 加入额外的管理节点 –&gt; 加入工作节点 123456789101112# swarm初始化，将节点切换为swarm模式docker swarm init --advertise-addr 10.0.0.1:2377 --listen-addr 10.0.0.1:2377# 列出Swarm中的节点docker node ls# 查询加入manager的token指令docker swarm join-token manager# 查询加入worker的token指令docker swarm join-token worker Swarm HA 特性Swarm使用了Raft共识算法来支持管理节点(Manager)的HA。 最佳实践原则： 部署奇数个管理节点，防止脑裂(Split-Brain) 假设有4个管理节点，当网络发生分区时，可能每个分区都有两个管理节点，每个分区都无法知道其余两个节点能否正常运行，无法得知分区是否掌握了大多数(Quorum)。集群虽然存在且在运行，但是无法变更配置、增加和管理应用负载。 不要部署太多管理节点（3、5），共识效率","link":"/2021/02/15/Docker-Swarm/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/02/18/hello-world/"},{"title":"创建github博客工作流","text":"搭建博客说明 Hexo安装说明使用hexo构建博客前，首先要安装hexo相关支持组件。Hexo基础的支持环境就是NodeJS。 安装NodeJS 安装Hexo npm install -g hexo-cli1npm install -g hexo-cli 基础指令建站初始化12345678910111213$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install--------- 构建结果 ----------.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 常用指令123hexo new [layout] title # 新建文章hexo generate # 生成静态文件hexo server # 启动服务器 主题设置使用主题Icarus 下载主题到本地 1git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 配置_config.yml文件 1theme: icarus 配置_config_icarus.yml文件 1231. 移除google广告挂件2. 移除打赏、分享挂价3. 启用Gitalk作为评论仓库 Gitalk 创建OAuth Apps 创建评论仓库 配置comment_config_icarus.yml 中尤其要注意proxy配置,否则403. 1proxy: 'https://netnr-proxy.cloudno.de/https://github.com/login/oauth/access_token' github账号的建立参考其他github账号申请与创建的步骤 github.io项目创建项目名称为lingodan.github.io,自行创建需要更换为自己的用户名； Travis-CI使用Travis完成持续集成设置。 使用Github账户登录Travis-CI网站https://travis-ci.com/ 在项目根路径下新建.travis.yml文件 12345678910111213141516171819202122232425sudo: falselanguage: node_jsnode_js: - 12 cache: npmbranches: only: - master # build master branch onlybefore_install:- export TZ='Asia/Shanghai'- npm install -g hexo-cli- npm installinstall:- npm installscript:- hexo clean- hexo generate # generate static filesdeploy: provider: pages skip-cleanup: true github-token: $GH_TOKEN # GH_TOKEN在github申请，在Travis页面配置 keep-history: true on: branch: master # 监控master分支变化 local-dir: public 申请Github Personal access tokens Travis 页面配置GH_TOKEN 以上完成Travis对于项目的配置。当Github项目更新时，Travis会收到任务，触发编译任务。","link":"/2021/02/14/%E5%88%9B%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2%E5%B7%A5%E4%BD%9C%E6%B5%81/"},{"title":"新年复工快乐","text":"Hello New Year. 换到新平台，来测试下日志输出。","link":"/2021/02/18/%E6%96%B0%E5%B9%B4%E5%A4%8D%E5%B7%A5%E5%BF%AB%E4%B9%90/"}],"tags":[{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"npm","slug":"npm","link":"/tags/npm/"},{"name":"工作笔记","slug":"工作笔记","link":"/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"}],"categories":[{"name":"日志博客","slug":"日志博客","link":"/categories/%E6%97%A5%E5%BF%97%E5%8D%9A%E5%AE%A2/"}]}